package three
// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at:
// 2018-09-04 20:56:59.33196 +0300 EEST m=+0.001328467
//
// using the following cmd:
// geometry_method_generator -geometryType BasicGeometry -geometrySlug basic_geometry

import "github.com/gopherjs/gopherjs/js"
	
func (g BasicGeometry) ApplyMatrix(matrix *Matrix4) {
	g.Object.Call("applyMatrix", matrix)
}

func (g BasicGeometry) RotateX() {
	g.Object.Call("rotateX")
}

func (g BasicGeometry) RotateY() {
	g.Object.Call("rotateY")
}

func (g BasicGeometry) RotateZ() {
	g.Object.Call("rotateZ")
}

func (g BasicGeometry) Translate() {
	g.Object.Call("translate")
}

func (g BasicGeometry) Scale() {
	g.Object.Call("scale")
}

func (g BasicGeometry) LookAt() {
	g.Object.Call("lookAt")
}

func (g BasicGeometry) FromBufferGeometry(geometry Geometry) {
	g.Object.Call("fromBufferGeometry")
}

func (g BasicGeometry) Center() {
	g.Object.Call("center")
}

func (g BasicGeometry) Normalize() BasicGeometry {
	g.Object.Call("normalize")
	return g
}

func (g BasicGeometry) ComputeFaceNormals() {
	g.Object.Call("computeFaceNormals")
}

func (g BasicGeometry) ComputeVertexNormals(areaWeighted bool) {
	g.Object.Call("computeVertexNormals", areaWeighted)
}

func (g BasicGeometry) ComputeFlatVertexNormals() {
	g.Object.Call("computeFlatVertexNormals")
}

func (g BasicGeometry) ComputeMorphNormals() {
	g.Object.Call("computeMorphNormals")
}

func (g BasicGeometry) ComputeLineDistances() {
	g.Object.Call("computeLineDistances")
}

func (g BasicGeometry) ComputeBoundingBox() {
	g.Object.Call("computeBoundingBox")
}

func (g BasicGeometry) ComputeBoundingSphere() {
	g.Object.Call("computeBoundingSphere")
}

func (g BasicGeometry) Merge(geometry Geometry, matrix Matrix4, materialIndexOffset float64) {
	g.Object.Call("merge", geometry, matrix, materialIndexOffset)
}

func (g BasicGeometry) MergeMesh(mesh Mesh) {
	g.Object.Call("mergeMesh", mesh.getInternalObject())
}

func (g BasicGeometry) MergeVertices() {
	g.Object.Call("mergeVertices")
}

func (g BasicGeometry) SortFacesByMaterialIndex() {
	g.Object.Call("sortFacesByMaterialIndex")
}

func (g BasicGeometry) ToJSON() interface{} {
	return g.Object.Call("toJSON")
}

// func (g BasicGeometry) Clone() BasicGeometry {
// 	return g.Object.Call("clone")
// }

func (g BasicGeometry) Copy(source Object3D, recursive bool) *BasicGeometry {
	return &BasicGeometry{Object: g.getInternalObject().Call("copy", source.getInternalObject(), recursive)}
}

func (g BasicGeometry) Dispose() {
	g.Object.Call("dispose")
}

func (g BasicGeometry) getInternalObject() *js.Object {
	return g.Object
}

